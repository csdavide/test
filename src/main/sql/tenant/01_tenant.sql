create table if not exists ecm_users (
    id int8 not null generated by default as identity,
    tenant varchar(255) not null,
    username varchar(255) not null,
    uuid varchar(255) not null ,
    "data" jsonb,
    constraint ecm_users_pkey primary key (id),
    constraint ecm_users_uuid_uq unique (tenant, uuid)
);

create table if not exists ecm_pub_keys (
    tenant varchar(255) not null,
    kid varchar(255) not null,
    pub_key text not null,
    username varchar(255) not null,
    scopes varchar(255) not null,
    constraint ecm_pub_keys_pk primary key (tenant,kid),
    constraint ecm_pub_keys_uq unique (tenant,pub_key)
);

create table if not exists ecm_groups (
    id int8 not null generated by default as identity,
    tenant varchar(255) not null ,
    groupname varchar(255) not null,
    constraint ecm_groups_pkey primary key (id),
    constraint ecm_groups_uq unique (tenant, groupname)
);

create table if not exists ecm_user_groups (
    user_id int8 not null,
    group_id int8 not null,
    constraint ecm_user_groups_pkey primary key (user_id, group_id),
    constraint ecm_user_groups_user_fk foreign key (user_id) references ecm_users(id),
    constraint ecm_user_groups_group_fk foreign key (group_id) references ecm_groups(id)
);

create table if not exists ecm_async_operations (
    id varchar(255) primary key,
    tenant varchar(255) not null,
    status varchar(255) not null,
    "data" jsonb,
    created_at timestamptz,
    updated_at timestamptz
);

create table if not exists ecm_transactions (
    id int8 not null generated by default as identity,
    tenant varchar(255) not null,
    uuid varchar(255) not null,
    created_at timestamptz,
    indexed_at timestamptz,
    ck_required boolean,
    constraint ecm_transactions_pkey primary key (id)
);

create table if not exists ecm_security_groups (
    id int8 not null generated by default as identity,
    "name" varchar(255),
    tenant varchar(255) not null,
    uuid varchar(255),
    tx int8,
    inheritance boolean default true,
    managed boolean default true,
    sg_src int8,
    constraint ecm_security_groups_pkey primary key (id)
);

create table if not exists ecm_access_rules (
    id int8 not null generated by default as identity,
    authority varchar(255) not null,
    rights varchar(255) not null,
    sg_id int8 not null,
    constraint ecm_access_rules_pkey primary key (id)
);

create table if not exists ecm_nodes (
    id int8 not null generated by default as identity,
    tenant varchar(255) not null,
    uuid varchar(255) not null,
    version int4 default 0,
    type_name varchar(255) not null,
    code varchar(255),
    "data" jsonb,
    sg_id int8,
    tx int8,
    tx_flags varchar(8),
    updated_at timestamptz,
    constraint ecm_nodes_pkey primary key (id)
);

create table if not exists ecm_versions (
    version_uuid varchar(255) not null,
    node_id int8 not null,
    version int4 not null,
    tag varchar(255),
    "data" jsonb,
    created_at timestamptz,
    created_by varchar(255),
    constraint ecm_versions_pkey primary key (version_uuid),
    constraint ecm_versions_ver_uq unique (node_id, version),
    constraint ecm_versions_tag_uq unique (node_id, tag)
);

create table if not exists ecm_associations (
    id int8 not null generated by default as identity,
    parent_id int8 not null,
    child_id int8 not null,
    type_name varchar(255) not null,
    "name" varchar(255),
    code varchar(255),
    is_hard bool,
    constraint ecm_associations_pkey primary key (id),
    constraint ecm_associations_parent_child_uq unique (parent_id, child_id),
    constraint ecm_associations_parent_code_uq unique (parent_id, code)
);

create table if not exists ecm_paths (
    id int8 not null generated by default as identity,
    file_path text not null,
    lev int4 not null,
    node_path text not null,
    sg_path text null,
    is_hard bool not null,
    node_id int8 not null,
    parent_id int8,
    tx int8,
    path_parts int[],
    constraint ecm_paths_pkey primary key (id),
    constraint ecm_paths_node_fk foreign key (node_id) references ecm_nodes(id),
    constraint ecm_paths_parent_fk foreign key (parent_id) references ecm_nodes(id)
);

create table if not exists ecm_files (
    tenant varchar(255) not null,
    contentref varchar(255) not null,
    contentsize int8 default 0,
    contenthash varchar(255),
    counter int4 default 0,
    cached_text text compression lz4,
    error_msg varchar(255),
    primary key (tenant, contentref)
);

-- ARCHIVED NODES
create table if not exists ecm_archived_nodes (
    id int8 not null,
    tenant varchar(255) not null,
    uuid varchar(255) not null,
    version int4 default 0,
    type_name varchar(255) not null,
    "data" jsonb,
    sg_id int8,
    tx int8,
    updated_at timestamptz,
    constraint ecm_archived_nodes_pkey primary key (id)
);

create table if not exists ecm_archived_associations (
    id int8 not null,
    parent_id int8 not null,
    child_id int8 not null,
    type_name varchar(255) not null,
    "name" varchar(255),
    code varchar(255),
    is_hard bool,
    constraint ecm_archived_associations_pkey primary key (id)
);

-- REMOVED NODES
create table if not exists ecm_removed_nodes (
    id int8 not null,
    tenant varchar(255) not null,
    uuid varchar(255) not null,
    "data" jsonb,
    tx int8,
    sg_id int8,
    wipeable boolean default false,
    constraint ecm_removed_nodes_pkey primary key (id),
    constraint ecm_removed_nodes_tx_fk foreign key (tx) references ecm_transactions (id)
);

-- CONFIGURATION DICTIONARIES
create table if not exists ecm_dict_entries (
    tenant  varchar(255) not null,
    ns      varchar(255) not null,
    k       varchar(255) not null,
    payload text,
    primary key (tenant, ns, k)
);
